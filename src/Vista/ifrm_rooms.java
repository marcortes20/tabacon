/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import java.beans.PropertyVetoException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import Modelo.rooms;
import Controlador.management_rooms;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author mcortes19
 */
public class ifrm_rooms extends javax.swing.JInternalFrame {

    private management_rooms mana_rooms = new management_rooms();

    private rooms room;
    
    static File photo;
    

    public ifrm_rooms() throws PropertyVetoException {
        initComponents();
        room_list();
        this.setMaximum(true);
        set_spiner(spiner_kids);
        set_spiner(spiner_adutls);
        
//        String dir = System.getProperty("user.dir") + "/src/rooms_img/5.jpg";
//        File foto = new File(dir);
//        System.out.println(foto.isFile());
        
//        File foto = new File("/Users/mcortes19/NetBeansProjects/tabacon_Hotel /src/rooms_img/56.jpg");
//        foto.canExecute();
//        System.out.println(foto.isFile());
//        System.out.println(foto.getAbsolutePath());
//        foto.delete();
       

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        win_rooms = new javax.swing.JDialog();
        jPanel10 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        txt_room_id = new javax.swing.JTextField();
        txt_kids_price = new javax.swing.JTextField();
        txt_adults_price = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        txt_description = new javax.swing.JTextArea();
        room_photo = new jcFoto.jcFoto();
        jLabel64 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        check_reserved = new javax.swing.JCheckBox();
        cbxUser_type = new javax.swing.JComboBox<>();
        btn_SignUp = new javax.swing.JButton();
        btn_save_room = new javax.swing.JButton();
        spiner_adutls = new javax.swing.JSpinner();
        spiner_kids = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        btn_guardar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        btn_editar = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btn_eliminar = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        btn_imprimir = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btn_cerrar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jPanel1 = new javax.swing.JPanel();
        lb_total = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_rooms = new javax.swing.JTable();

        win_rooms.setSize(new java.awt.Dimension(898, 809));
        win_rooms.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel10.setBackground(new java.awt.Color(0, 0, 0,80));
        jPanel10.setForeground(new java.awt.Color(0, 0, 0));

        jLabel56.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel56.setText("Description:");

        jLabel57.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel57.setText("Room id:");

        jLabel58.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel58.setText("Maximum. adults:");

        jLabel60.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel60.setText("Price per adult:");

        jLabel61.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel61.setText("Status");

        jLabel62.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel62.setText("Price per kid:");

        jLabel63.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel63.setText("Reserved:");

        txt_room_id.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txt_room_id.setForeground(new java.awt.Color(0, 0, 0));

        txt_kids_price.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txt_kids_price.setForeground(new java.awt.Color(0, 0, 0));

        txt_adults_price.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txt_adults_price.setForeground(new java.awt.Color(0, 0, 0));

        txt_description.setColumns(20);
        txt_description.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N
        txt_description.setForeground(new java.awt.Color(0, 0, 0));
        txt_description.setRows(5);
        jScrollPane8.setViewportView(txt_description);

        room_photo.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N

        jLabel64.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel64.setText("Image:");

        jLabel59.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jLabel59.setText("Maximum. kids:");

        cbxUser_type.setBackground(new java.awt.Color(0, 0, 0));
        cbxUser_type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active.", "Not active." }));
        cbxUser_type.setSelectedItem(null);

        btn_SignUp.setBackground(new java.awt.Color(153, 153, 0));
        btn_SignUp.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        btn_SignUp.setForeground(new java.awt.Color(255, 255, 255));
        btn_SignUp.setText("Cancel");
        btn_SignUp.setActionCommand("Sign up");
        btn_SignUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SignUpActionPerformed(evt);
            }
        });

        btn_save_room.setBackground(new java.awt.Color(153, 153, 0));
        btn_save_room.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        btn_save_room.setForeground(new java.awt.Color(255, 255, 255));
        btn_save_room.setText("Save");
        btn_save_room.setActionCommand("Sign up");
        btn_save_room.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_save_room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_save_roomActionPerformed(evt);
            }
        });

        spiner_adutls.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N

        jTextField1.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(51, 255, 0));
        jTextField1.setText("$");

        jTextField2.setFont(new java.awt.Font("Arial Unicode MS", 1, 14)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(51, 255, 0));
        jTextField2.setText("$");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_room_id, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel58)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel59)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel62)
                                    .addComponent(jLabel60)
                                    .addComponent(jLabel61)
                                    .addComponent(jLabel63)))
                            .addComponent(jLabel64))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(room_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(txt_adults_price)
                                .addGap(0, 0, 0)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(txt_kids_price)
                                .addGap(0, 0, 0)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(check_reserved)
                            .addComponent(cbxUser_type, 0, 230, Short.MAX_VALUE)
                            .addComponent(spiner_adutls)
                            .addComponent(spiner_kids))))
                .addGap(551, 551, 551))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btn_save_room, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_SignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(503, 503, 503))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txt_room_id, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spiner_adutls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spiner_kids, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_adults_price, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_kids_price, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxUser_type, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel63, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(check_reserved))
                .addGap(18, 18, 18)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(room_photo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel64))
                .addGap(48, 48, 48)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_SignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_save_room, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        room_photo.getAccessibleContext().setAccessibleDescription("");

        win_rooms.getContentPane().add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 520, 820));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/room_background.jpg"))); // NOI18N
        win_rooms.getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-380, 0, 1200, 820));

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Rooms");
        setVisible(true);

        jToolBar1.setRollover(true);
        jToolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_guardar.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        btn_guardar.setText("Save");
        btn_guardar.setFocusable(false);
        btn_guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_guardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_guardar);
        jToolBar1.add(jSeparator1);

        btn_editar.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        btn_editar.setText("Edit");
        btn_editar.setFocusable(false);
        btn_editar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_editar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_editar);
        jToolBar1.add(jSeparator4);

        btn_eliminar.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        btn_eliminar.setText("Delete");
        btn_eliminar.setFocusable(false);
        btn_eliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_eliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btn_eliminar);
        jToolBar1.add(jSeparator5);

        btn_imprimir.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        btn_imprimir.setText("Print");
        btn_imprimir.setFocusable(false);
        btn_imprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_imprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btn_imprimir);
        jToolBar1.add(jSeparator3);

        btn_cerrar.setFont(new java.awt.Font("Arial Unicode MS", 0, 18)); // NOI18N
        btn_cerrar.setText("Close");
        btn_cerrar.setFocusable(false);
        btn_cerrar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_cerrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerrarActionPerformed(evt);
            }
        });
        jToolBar1.add(btn_cerrar);
        jToolBar1.add(jSeparator2);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        lb_total.setFont(new java.awt.Font("Arial Unicode MS", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lb_total, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_total, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        table_rooms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Room id", "Description", "Image", "Max. Customers", "Adult price", "kid price", "State", "Reserved"
            }
        ));
        jScrollPane1.setViewportView(table_rooms);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerrarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_cerrarActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        win_rooms.setTitle("Save room");

        win_rooms.setLocationRelativeTo(null);

        win_rooms.setVisible(true);
    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        win_rooms.setLocationRelativeTo(null);

         int fila = table_rooms.getSelectedRow();

        if (fila != -1) {

            win_rooms.setTitle("Edit room");

            txt_room_id.setEditable(false);
            
            room = new rooms();
            
            room.setRoom_id(Integer.parseInt(table_rooms.getValueAt(fila, 0).toString()));

            mana_rooms.search_room(room);

            txt_room_id.setText(String.valueOf(room.getRoom_id()));

            txt_room_id.setEditable(false);

            txt_description.setText(room.getDescription());

            spiner_adutls.setValue((room.getMaximun_adults()));
            
            spiner_kids.setValue((room.getMaximun_kids()));
            
            txt_adults_price.setText(String.valueOf(room.getPrice_per_day_adults()));
            
            txt_kids_price.setText(String.valueOf(room.getPrice_per_day_kids()));
            
            if (room.isRoom_status()) {
                
                cbxUser_type.setSelectedIndex(0);
                
            }else{
                
                 cbxUser_type.setSelectedIndex(1);
                
            }
            
            if (room.isReserved()) {
                
                check_reserved.setSelected(true);
                
            }else{
                
                check_reserved.setSelected(false);
            }
            
            String dir = System.getProperty("user.dir") + "/src/rooms_img/" + room.getImage();
            
            photo = new File(dir);
            
            win_rooms.setVisible(true);

        } else {

            JOptionPane.showMessageDialog(this, "Seleciona la categoria a editar", "Editar", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btn_editarActionPerformed
    
    private void btn_SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SignUpActionPerformed
        win_rooms.dispose();

    }//GEN-LAST:event_btn_SignUpActionPerformed

    private void btn_save_roomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_save_roomActionPerformed

        if (validate_data().isEmpty()) {

            room = new rooms();

            room.setRoom_id(Integer.parseInt(txt_room_id.getText()));

            room.setDescription(txt_description.getText());

            room.setMaximun_adults((int) spiner_adutls.getValue());

            room.setMaximun_kids((int) spiner_kids.getValue());

            room.setPrice_per_day_adults(Double.parseDouble(txt_adults_price.getText()));

            room.setPrice_per_day_kids(Double.parseDouble(txt_kids_price.getText()));

            if (cbxUser_type.getSelectedIndex() == 0) {

                room.setRoom_status(true);

            } else {

                room.setRoom_status(true);
            }

            if (check_reserved.isSelected()) {

                room.setReserved(true);

            } else {

                room.setReserved(false);

            }

            save_photo(txt_room_id.getText(), room);

            if (win_rooms.getTitle().equals("Save room")) {

                if (mana_rooms.room_register(room)) {

                    JOptionPane.showMessageDialog(win_rooms, "Room was registered ", "Successfully!", JOptionPane.INFORMATION_MESSAGE);
                    
                    win_rooms.dispose();
                    
                    room_list();

                } else {

                    JOptionPane.showMessageDialog(win_rooms, "Error:", "Room hasn't registered!", JOptionPane.ERROR_MESSAGE);
                }

            }

            if (win_rooms.getTitle().equals("Edit room")) {
                
                if (mana_rooms.edit_room(room)) {
                    
                     JOptionPane.showMessageDialog(win_rooms, "Room was registered ", "Successfully!", JOptionPane.INFORMATION_MESSAGE);
                     
                     win_rooms.dispose();
                     
                     room_list();
                }

            }
        } else {      
         JOptionPane.showMessageDialog(win_rooms, "EMPTY FIELDS:" + validate_data(), "You must fill in all fields!", JOptionPane.ERROR_MESSAGE);      
        }
    }//GEN-LAST:event_btn_save_roomActionPerformed

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_SignUp;
    private javax.swing.JButton btn_cerrar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_imprimir;
    public javax.swing.JButton btn_save_room;
    public javax.swing.JComboBox<String> cbxUser_type;
    private javax.swing.JCheckBox check_reserved;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lb_total;
    private jcFoto.jcFoto room_photo;
    private javax.swing.JSpinner spiner_adutls;
    private javax.swing.JSpinner spiner_kids;
    private javax.swing.JTable table_rooms;
    private javax.swing.JTextField txt_adults_price;
    private javax.swing.JTextArea txt_description;
    private javax.swing.JTextField txt_kids_price;
    private javax.swing.JTextField txt_room_id;
    private javax.swing.JDialog win_rooms;
    // End of variables declaration//GEN-END:variables

    public String validate_data() {

        String empty_fields = "";

        if (txt_room_id.getText().isEmpty()) {

            txt_room_id.requestFocus();

            empty_fields += "\nRoom id.";

        }

        if (txt_description.getText().trim().isEmpty()) {

            txt_description.requestFocus();

            empty_fields += "\nDescription";
        }

        if (spiner_adutls.getValue() == "0") {

            spiner_adutls.requestFocus();

            empty_fields += "\nMaximum. adults:";

        }

        if (spiner_kids.getValue() == "0") {

            spiner_kids.requestFocus();

            empty_fields += "\nMaximum. kids:";

        }

        if (txt_adults_price.getText().trim().isEmpty()) {

            txt_adults_price.requestFocus();

            empty_fields += "\nPrice per adult:";
        }

        if (txt_kids_price.getText().trim().isEmpty()) {

            txt_kids_price.requestFocus();

            empty_fields += "\nPrice per kids:";
        }

        if (cbxUser_type.getSelectedItem() == null) {

            cbxUser_type.requestFocus();

            empty_fields += "\nStatus";
        }

        if (room_photo.getPathFoto() == null) {

            room_photo.requestFocus();

            empty_fields += "\n Room image";

        }

        return empty_fields;

    }

    private boolean save_photo(String room_id, rooms room) {

        int dotPos = room_photo.getPathFoto().lastIndexOf(".");

        String extension = room_photo.getPathFoto().substring(dotPos);

        String dir = System.getProperty("user.dir") + "/src/rooms_img/" + room_id + extension;

        room.setImage(room_id + extension);

        File entrada = new File(room_photo.getPathFoto());

        File salida = new File(dir);
        
        photo.delete();

        boolean resp = copyFile(entrada, salida) ? true : false;

        return resp;
    }

    public boolean copyFile(File entrada, File salida) {
        try {

            FileChannel out;

            try ( FileChannel in = (new FileInputStream(entrada)).getChannel()) {

                out = (new FileOutputStream(salida)).getChannel();

                in.transferTo(0, entrada.length(), out);
            }
            out.close();
            return true;
        } catch (IOException e) {
            return false;
        }
    }

    public void set_spiner(JSpinner spiner) {

        @SuppressWarnings("deprecation")

        SpinnerNumberModel model = new SpinnerNumberModel(
                new Integer(1), // Dato visualizado al inicio en el spinner
                new Integer(0), // Límite inferior
                new Integer(10), // Límite superior
                new Integer(1) // incremento-decremento
        );

        spiner.setModel(model);

    }
    
        private void room_list() {

        mana_rooms.conectarBD();

        ResultSet rs = mana_rooms.rooms_list(room);

        if (rs != null) {

            table_rooms.setModel(mana_rooms.cargarEnTabla(rs));

            lb_total.setText("Total: " + table_rooms.getRowCount());

        }
        mana_rooms.desconectarBD();
    }

}
